{"version":3,"sources":["config/define.js","utils/helper.js","utils/data/api.js","store/auth/AuthContext.jsx","store/lobby/LobbyContext.jsx","components/common/Navbar.jsx","components/common/LoginForm.jsx","components/common/ResetPassword.jsx","components/common/LoginModal.jsx","components/intro/Intro.jsx","components/lobby/LobbyPage.jsx","store/locale/LocaleContext.jsx","components/main-conference/ReplayList.jsx","components/main-conference/LiveStreamingModal.jsx","components/main-conference/EnterPopper.jsx","components/main-conference/MainConference.jsx","store/subConference/SubConferenceContext.jsx","components/sub-conference/Modal/Player.jsx","components/sub-conference/Modal/SessionList.jsx","components/sub-conference/Modal/Container.jsx","components/sub-conference/SubConference.jsx","components/lobby/modal/SubConferenceList.jsx","components/profile/Password.jsx","components/profile/InformationAgreement.jsx","components/profile/ProfilePage.jsx","components/lobby/modal/ProgramInfo.jsx","components/lobby/modal/HelpDesk.jsx","components/App.jsx","serviceWorker.js","index.jsx"],"names":["CDN_HOST","process","API_BASE_URL","define","WEBSOCKET_SERVER","RESOURCE","INTRO_BACKGROUND","LOBBY_BACKGROUND","MAIN_CONFERENCE_BG","ICON_HOME","ICON_AUDITORIUM","ICON_SESSION","ICON_PROGRAMME","ICON_HELP","API","AUTH_LOGIN","method","url","module","exports","findLocaleInStorage","locale","localStorage","getItem","console","log","isEmpty","str","undefined","require","apiClient","axios","create","baseURL","AuthContext","React","createContext","AuthProvider","children","useState","token","setToken","loading","setLoading","isAuthenticated","setIsAuthenticated","history","useHistory","email","name","affiliation","is_agreed_policy","user","setUser","logout","useCallback","removeItem","push","useEffect","a","config","headers","Authorization","get","res","data","loadUser","store","onLogin","newToken","loggedUser","staySignedIn","Error","setItem","Provider","value","LobbyContext","LobbyProvider","useContext","subConference","open","helpDesk","programInfo","modalManager","setModalManager","helpData","survey","congreturation","lobbyDatas","setLobbyDatas","test","find","item","subject","fetchLobbyData","Navbar","setOpen","handleRouting","path","openModal","arg","prev","className","type","onClick","src","alt","LoginForm","toggleForm","password","form","setForm","errMsg","setErrMsg","setStaySignedIn","handleChange","e","target","handleLogin","post","then","response","catch","error","msg","title","onChange","onKeyDown","event","key","checked","ResetPassword","setEmail","id","setMsg","openProfile","setOpenProfile","handleResetPassword","length","messageId","message","code","style","textTransform","fontWeight","defaultChecked","color","LoginModal","isLoginform","setIsLoginForm","Intro","props","to","width","height","LobbyPage","loadLocaleDataByAcceptHeader","LocaleContext","LocaleProvider","msgs","setLocale","handleLangSubmit","lang","localeInStorage","language","window","navigator","userLanguage","getLocale","ReplayList","handleClose","live","LiveStreamingModal","play","playVideo","openEnterPopper","stopVideo","display","justifyContent","cursor","role","EnterPopper","position","top","right","background","zIndex","fontSize","textAlign","MainConference","setLive","streamingOpen","setStreamingOpen","replayListOpen","setReplayListOpen","setPlay","enterPopperOpen","setEnterPopperOpen","handleToggleStreaming","handleToggleReplay","language_code","fetchLiveData","stlye","left","padding","SubConferenceContext","banner","left_banner","right_banner","setBanners","session","sessionList","replayList","playingSession","setSessionList","setSessionReplayList","setPlayingSession","modal","trigger","timeStamp","start_time","end_time","setTimeStamp","useModal","useTimeStamp","useBanner","banners","useSessionList","location","useLocation","currentTime","Date","now","getSessionReplayList","filter","parse","close_datetime","getSessionByIndex","list","subConfIndex","pathname","substr","cover_url","action_url","sub_section_idx","parseInt","options","Array","isArray","getSessionList","SubConferenceProvider","Player","frameBorder","allow","allowFullScreen","SessionReplayList","onPlay","open_datetime","preload","lineHeight","map","v","cover_link","SessionTimeTable","idx","flex","flexDirection","data-idx","SessionList","currentTarget","dataset","Container","Content","player","Fragment","margin","SubConference","notice","setNotice","onTimeStampClick","persist","marginLeft","minWidth","SubConferenceContainer","SubConferenceList","subConferenceList","setSubConferenceList","fetchSubConferenceData","Box","py","mx","my","bgcolor","Grid","alignItems","justify","container","Button","param","handleDirect","size","PassWord","currPassWord","newPassWord","confirmNewPassWord","setPassword","setErrInfo","validate","onNewPassWordSubmit","alert","onKeyUp","prevState","p","Typography","variant","gutterBottom","paddingRight","placeholder","m","disabled","InformationAgreement","send","result","status","obj","setIsAgreedPolicy","bool","overflowY","htmlFor","marginRight","border","ProfilePage","direction","ProgramInfo","OpenTime","ClosingTime","HelpDesk","moment","utc","isBetween","isOpentime","defaultProps","App","messages","defaultLocale","component","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2bf64944.chunk.js","sourcesContent":["/*\nproject root의 .env 환경변수 참고.\n*/\n\nconst CDN_HOST = `${process.env.REACT_APP_CDN_HOST}`;\nconst API_BASE_URL = `${process.env.REACT_APP_API_BASE_URL}`;\n\nconst define = {\n  CDN_HOST : `${process.env.REACT_APP_CDN_HOST}`,\n  API_BASE_URL : `${process.env.REACT_APP_API_BASE_URL}`,\n  WEBSOCKET_SERVER : `${process.env.REACT_APP_WEBSOCKET_SERVER}`,\n  RESOURCE: {\n    INTRO_BACKGROUND: `${CDN_HOST}/assets/intro/intro_bg.jpg`,\n    LOBBY_BACKGROUND: `${CDN_HOST}/assets/lobby/lobby_bg.png`,\n    MAIN_CONFERENCE_BG: `${CDN_HOST}/assets/mainConference/bg.png`,\n    ICON_HOME: `${CDN_HOST}/assets/menu_icon/icon_home.svg`,\n    ICON_AUDITORIUM: `${CDN_HOST}/assets/menu_icon/icon_auditorium.svg`,\n    ICON_SESSION: `${CDN_HOST}/assets/menu_icon/icon_session.svg`,\n    ICON_PROGRAMME: `${CDN_HOST}/assets/menu_icon/icon_programme.svg`,\n    ICON_HELP: `${CDN_HOST}/assets/menu_icon/icon_help.svg`,\n  },\n  API: {\n    AUTH_LOGIN: {\n      method: \"post\",\n      url: `${API_BASE_URL}/auth/login`,\n    },\n  },\n};\n\nmodule.exports = define;\n\n","export const findLocaleInStorage = () => {\n  const locale = localStorage.getItem(\"locale\");\n  console.log(\"detect locale in localStorage::\", locale);\n  // if there is nothing , return null\n  if (!locale) return null;\n  if (locale === \"en\") return \"en\";\n  return \"kr\";\n};\n\n// export const isKoreanPreferred = () => {\n//   // The Accept-Language request HTTP header advertises which languages the client is able to understand, and which locale variant is preferred.\n//   const language = window.navigator.userLanguage || window.navigator.language;\n//   console.log(\"language ::\", language);\n//   if (language === \"ko-KR\") return true;\n//   return language;\n// };\n\nexport const mapObjToArr = (obj) => {\n  if (!obj) return;\n  const arr = [];\n  for (const key in obj) {\n    arr.push({ ...obj[key] });\n  }\n\n  return arr;\n};\n\nexport const detectIe = () => {\n  var ua = window.navigator.userAgent;\n  var msie = ua.indexOf(\"MSIE \");\n  var rv = -1;\n\n  if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\n    // If Internet Explorer, return version number\n    if (isNaN(parseInt(ua.substring(msie + 5, ua.indexOf(\".\", msie))))) {\n      //For IE 11 >\n      if (navigator.appName == \"Netscape\") {\n        var ua = navigator.userAgent;\n        var re = new RegExp(\"Trident/.*rv:([0-9]{1,}[.0-9]{0,})\");\n        if (re.exec(ua) != null) {\n          rv = parseFloat(RegExp.$1);\n          // e11;\n          return true;\n        }\n      } else {\n        // alert(\"otherbrowser\");\n      }\n    } else {\n      //For < IE11\n      // alert(parseInt(ua.substring(msie + 5, ua.indexOf(\".\", msie))));\n    }\n    return false;\n  }\n};\n\nexport const downloadURI = (uri, name) => {\n  var link = document.createElement(\"a\");\n  link.download = name;\n  link.href = uri;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  // delete link;\n};\n\nexport const convertNumToArray = (total, currentPage) => {\n  const arr = [];\n  if (currentPage < 7) {\n    for (let i = 0; i < total; i++) {\n      if (i < 10) {\n        arr.push(i + 1);\n      } else {\n        return arr;\n      }\n    }\n  } else {\n    // push start to currentpage\n    for (let i = 1; i <= 6; i++) {\n      arr.push(currentPage - 6 + i);\n    }\n    // push to end\n    for (let i = 1; i <= 4; i++) {\n      if (total >= currentPage + i) {\n        arr.push(currentPage + i);\n      } else {\n        continue;\n      }\n    }\n  }\n\n  return arr;\n};\n\nexport const detectTokenError = (code) => {\n  if (code === 1000 || code === 1001 || code === 1002 || code === 1003) {\n    return true;\n  } else {\n    return;\n  }\n};\n\n// export const storeStamp = async ({ logUserOut, body }) => {\n//   if (!body) return;\n//   if (!localStorage.token) {\n//     logUserOut();\n//     return;\n//   }\n\n//   const config = {\n//     headers: {\n//       Authorization: `Bearer ${localStorage.token}`,\n//     },\n//   };\n\n//   try {\n//     const res = await apiClient.post(mainPaths[\"stamp\"].post, body, config);\n//     console.log(\"body ::\", body);\n//     console.log(\"res ::\", res);\n//   } catch (err) {\n//     console.log(\"err :::\");\n//     console.log(err);\n//     if (err.response && err.response.error) {\n//       const code = err.response.error.code;\n//       if (detectTokenError(code)) {\n//         logUserOut();\n//         return;\n//       }\n//     }\n//   }\n// };\n\nexport const isEmpty = (str) => {\n  if (\n    str === null ||\n    str === undefined ||\n    str === \"null\" ||\n    str === \"undefined\"\n  )\n    return true;\n  return false;\n};\n","import axios from \"axios\";\n\n// const config = require(\"../../config/config\");\nconst define = require('../../config/define');\nconsole.log('define :: ', define);\n// const baseURL = config.apiBaseUrl;\n\n// axios.interceptors.response.use((response) => {\n//   return response;\n// }, function (error) {\n//   console.log('error ::', error);\n//   // Do something with response error\n//   if (error.response.status === 401) {\n//       console.log('unauthorized, logging out ...');\n//       auth.logout();\n//       router.replace('/');\n//   }\n//   return Promise.reject(error.response);\n// });\nconsole.log('API_BASE_URL :: ' + define.API_BASE_URL);\nconsole.log('WEBSOCKET_SERVER :: ' + define.WEBSOCKET_SERVER);\nexport const apiClient = axios.create({\n  baseURL: define.API_BASE_URL\n});\n\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { isEmpty } from \"../../utils/helper\";\nimport { apiClient } from \"../../utils/data/api\";\n\nconst AuthContext = React.createContext(null);\n\nconst AuthProvider = ({ children }) => {\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const history = useHistory();\n  const [user, setUser] = useState({\n    email: \"\",\n    name: \"\",\n    affiliation: \"\",\n    is_agreed_policy: null,\n  });\n\n  const logout = useCallback(() => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n    setIsAuthenticated(false);\n    setUser(null);\n    history.push(\"/intro\");\n  }, []);\n\n  const onLogin = ({ newToken, loggedUser, staySignedIn }) => {\n    if (isEmpty(newToken)) throw Error(\"no newToken\");\n    if (staySignedIn) {\n      localStorage.setItem(\"token\", newToken);\n      setToken(newToken);\n      setIsAuthenticated(true);\n      setUser(loggedUser);\n    } else {\n      setIsAuthenticated(true);\n      setUser(loggedUser);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"token :\", token);\n    if (!isEmpty(token)) {\n      const loadUser = async () => {\n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          };\n          // load user here\n          const res = await apiClient.get(\"/me\", config);\n          console.log(\"res\", res);\n          setUser(res.data);\n          setIsAuthenticated(true);\n          setLoading(false);\n        } catch (err) {\n          console.log(err);\n          setUser(null);\n          setIsAuthenticated(false);\n          setLoading(false);\n        }\n      };\n      loadUser();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n\n  const store = {\n    isAuthenticated,\n    loading,\n    user,\n    token,\n    onLogin,\n    logout,\n    setUser,\n  };\n\n  return <AuthContext.Provider value={store}>{children}</AuthContext.Provider>;\n};\n\nexport { AuthProvider, AuthContext };\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { apiClient } from \"../../utils/data/api\";\n\nconst LobbyContext = React.createContext(null);\n\nconst LobbyProvider = ({ children }) => {\n  const { isAuthenticated, token } = useContext(AuthContext);\n\n  const [modalManager, setModalManager] = useState({\n    subConference: {\n      open: false,\n    },\n    helpDesk: {\n      open: false,\n    },\n    programInfo: {\n      open: false,\n    },\n    //       introVideo: {\n    //         open: false,\n    //       },\n    //       branding: {\n    //         open: false,\n    //       },\n    // agencyList: {\n    //   open: false,\n    // },\n\n    // lounge: {\n    //   open: false,\n    // },\n    // exhibition: {\n    //   open: false,\n    // },\n  });\n\n  const [lobbyDatas, setLobbyDatas] = useState({\n    helpData: null,\n    survey: null,\n    congreturation: null,\n  });\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      const fetchLobbyData = async () => {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        };\n\n        try {\n          const res = await apiClient.get(\"/lobby\", config);\n          const test = await apiClient.get(\"/user\", config);\n          console.log(\"test ::\", test);\n          const survey = res.data.find((item) => item.subject === \"설문조사\");\n          const congreturation = res.data.find(\n            (item) => item.subject === \"축하메세지\"\n          );\n          const helpData = res.data.find(\n            (item) => item.subject === \"Help Desk\"\n          );\n          setLobbyDatas({\n            survey,\n            congreturation,\n            helpData,\n          });\n          console.log(\"res ::\", res);\n        } catch (err) {\n          console.log(\"err ::\", err);\n        }\n      };\n      fetchLobbyData();\n    }\n  }, [isAuthenticated]);\n  const store = {\n    modalManager,\n    setModalManager,\n    lobbyDatas,\n  };\n\n  return (\n    <LobbyContext.Provider value={store}>{children}</LobbyContext.Provider>\n  );\n};\n\nLobbyProvider.propTypes = {\n  children: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport { LobbyProvider, LobbyContext };\n","import { Fab } from \"@material-ui/core\";\nimport React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../store/auth/AuthContext\";\nimport { LobbyContext } from \"../../store/lobby/LobbyContext\";\nimport define from \"../../config/define\";\n\nconst classes = {\n  containerClosed: {\n    left: \"-280px\",\n  },\n};\n\nconst Navbar = () => {\n  // const user = useContext(AppContext);\n  const { isAuthenticated, logout, user } = useContext(AuthContext);\n  const { setModalManager } = useContext(LobbyContext);\n  const [open, setOpen] = useState(true);\n  const history = useHistory();\n\n  const handleToggleNavbar = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const handleRouting = (path) => {\n    history.push(path);\n  };\n\n  const openModal = (arg) => {\n    let name;\n    if (arg === \"subConference\") {\n      name = arg;\n    } else if (arg === \"helpDesk\") {\n      name = arg;\n    } else if (arg === \"programInfo\") {\n      name = arg;\n    } else {\n      throw Error(\"wrong argument\");\n    }\n\n    setModalManager((prev) => ({\n      ...prev,\n      [name]: {\n        open: true,\n      },\n    }));\n  };\n\n  const clickProfile = () => {\n    history.push(\"/profile\");\n  };\n\n  const {\n    ICON_HOME,\n    ICON_HELP,\n    ICON_AUDITORIUM,\n    ICON_SESSION,\n    ICON_PROGRAMME,\n  } = define.RESOURCE;\n\n  // console.log(\"isAuthenticated ::\", isAuthenticated);\n  if (!isAuthenticated) return <></>;\n\n  return (\n    <>\n      <header className=\"header\">\n        <button\n          type=\"button\"\n          onClick={handleToggleNavbar}\n          className=\"hamburger\"\n        >\n          <div className=\"hamburger__line\" />\n          <div className=\"hamburger__line\" />\n          <div className=\"hamburger__line\" />\n        </button>\n        <div className=\"header__logobox\">\n          <div className=\"header__logo logo\">\n            Korea Healthcare Congress 2020\n          </div>\n        </div>\n        <div className=\"profile\">\n          <div className=\"profile__username strong\">\n            {user ? user.email : \"no name\"}\n          </div>\n          <div className=\"profile__menu\">\n            <button\n              type=\"button\"\n              onClick={clickProfile}\n              className=\"profile__item\"\n            >\n              My Page\n            </button>\n            &nbsp;&nbsp;/&nbsp;&nbsp;\n            <button type=\"button\" onClick={logout} className=\"profile__item\">\n              Logout\n            </button>\n            {/* </a> */}\n          </div>\n        </div>\n        <nav className=\"nav\">\n          <ul className=\"nav__wrap\">\n            <li className=\"nav__item nav__item--select strong\">\n              <button\n                type=\"button\"\n                onClick={() => handleRouting(\"/lobby\")}\n                className=\"nav__link\"\n              >\n                <img className=\"nav__icon\" src={ICON_HOME} alt=\"\" />\n                Lobby\n              </button>\n            </li>\n            <li className=\"nav__item\">\n              <button\n                type=\"button\"\n                onClick={() => handleRouting(\"/mainConference\")}\n                className=\"nav__link strong\"\n              >\n                <img className=\"nav__icon\" src={ICON_AUDITORIUM} alt=\"\" />\n                Auditorium\n              </button>\n            </li>\n            <li className=\"nav__item\">\n              <button\n                type=\"button\"\n                onClick={() => openModal(\"subConference\")}\n                className=\"nav__link strong\"\n              >\n                <img className=\"nav__icon\" src={ICON_SESSION} alt=\"\" />\n                Session Room\n              </button>\n            </li>\n            {/* <li className=\"nav__item\">\n              <button type=\"button\" onClick={() => handleRouting(\"/\")}  href=\"#\" className=\"nav__link strong\">\n                <img\n                  className=\"nav__icon\"\n                  src=\"assets/menu_icon/icon_exhibition.svg\"\n                  alt=\"\"\n                />\n                Exhibition Center\n              </button>\n            </li>\n            <li className=\"nav__item\">\n              <a href=\"#\" className=\"nav__link strong\">\n                <img\n                  className=\"nav__icon\"\n                  src=\"assets/menu_icon/icon_sponsor.svg\"\n                  alt=\"\"\n                />\n                Sponsor한글\n              </a>\n            </li> */}\n            <li className=\"nav__item\">\n              <button\n                type=\"button\"\n                onClick={() => openModal(\"programInfo\")}\n                className=\"nav__link strong\"\n              >\n                <img className=\"nav__icon\" src={ICON_PROGRAMME} alt=\"\" />\n                Programme\n              </button>\n            </li>\n            {/* <li className=\"nav__item\">\n              <a href=\"#\" className=\"nav__link strong\">\n                <img\n                  className=\"nav__icon\"\n                  src=\"assets/menu_icon/icon_directory.svg\"\n                  alt=\"\"\n                />\n                Directory\n              </a>\n            </li> */}\n            <li className=\"nav__item\">\n              <button\n                type=\"button\"\n                onClick={() => openModal(\"helpDesk\")}\n                className=\"nav__link strong\"\n              >\n                <img className=\"nav__icon\" src={ICON_HELP} alt=\"\" />\n                Help Desk\n              </button>\n            </li>\n          </ul>\n        </nav>\n      </header>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { apiClient } from \"../../utils/data/api\";\nimport { AuthContext } from \"../../store/auth/AuthContext\";\n\nconst LoginForm = ({ toggleForm }) => {\n  // const { isAuthed, setIsAuthed } = useContext(AuthContext);\n  // if (isAuthed === true) return null;\n  const { onLogin } = useContext(AuthContext);\n  const history = useHistory();\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [errMsg, setErrMsg] = useState(null);\n  const [staySignedIn, setStaySignedIn] = useState(false);\n\n  const handleChangeStaySignIn = () => {\n    setStaySignedIn((prev) => !prev);\n  };\n\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleLogin = () => {\n    const { email, password } = form;\n    apiClient\n      .post(\"/auth/login\", { email, password })\n      .then((response) => {\n        // console.log(\"response ::\", response);\n        const { token, user } = response.data;\n        onLogin({ newToken: token, loggedUser: user, staySignedIn });\n\n        history.push(\"/lobby\");\n      })\n      .catch((error) => {\n        // const { code } = error.response.data;\n        const msg = error.response.data.error;\n        // console.log(\"err\", error);\n        // console.log(\"err\", error.response);\n        setErrMsg(msg);\n      });\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      handleLogin();\n    }\n  };\n\n  console.log(\"LoginForm rerendered\");\n\n  // if (isAuthenticated) return <Redirect to=\"/lobby\" />;\n\n  return (\n    <div className=\"popup\">\n      <div className=\"popup__tb\">\n        <div className=\"popup__cell zoomIn\">\n          <div className=\"loginbox\">\n            <div className=\"loginbox__header\">\n              <div className=\"loginbox__logobox logo\">\n                Korea Healthcare Congress 2020\n              </div>\n            </div>\n            <div className=\"loginbox__content\">\n              <ul className=\"loginbox__form\">\n                <li className=\"loginbox__item\">\n                  <label>\n                    <span>mail</span>\n                    <input\n                      className=\"loginbox__input\"\n                      type=\"text\"\n                      title=\"mail\"\n                      value={form.email}\n                      name=\"email\"\n                      onChange={handleChange}\n                    />\n                  </label>\n                </li>\n                <li className=\"loginbox__item\">\n                  <label>\n                    <span className=\"loginbox__ipttxt\">pw</span>\n                    <input\n                      className=\"loginbox__input\"\n                      value={form.password}\n                      type=\"password\"\n                      title=\"password\"\n                      name=\"password\"\n                      onKeyDown={handleKeyDown}\n                      onChange={handleChange}\n                    />\n                  </label>\n                </li>\n              </ul>\n              <div className=\"loginbox__ipt\">\n                <p className=\"loginbox__staysign\">\n                  <label className=\"checkbox\">\n                    <input\n                      checked={staySignedIn}\n                      onChange={handleChangeStaySignIn}\n                      className=\"checkbox__input\"\n                      type=\"checkbox\"\n                    />\n                    <span className=\"checkbox__txt loginbox__ipttxt\">\n                      Stay sign in\n                    </span>\n                  </label>\n                </p>\n                <p className=\"loginbox__findpw\">\n                  <button\n                    onClick={toggleForm}\n                    type=\"button\"\n                    className=\"loginbox__ipttxt\"\n                  >\n                    Forgot your password?\n                  </button>\n                </p>\n              </div>\n              <div className=\"popbtn\">\n                {errMsg && <div className=\"popbtn__error\">{errMsg}</div>}\n                <button\n                  onClick={handleLogin}\n                  type=\"button\"\n                  className=\"popbtn__button\"\n                >\n                  LOGIN\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nLoginForm.propTypes = {\n  toggleForm: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { apiClient } from \"../../utils/data/api\";\n\nconst ResetPassword = ({ toggleForm }) => {\n  const [email, setEmail] = useState(\"\");\n  const [msg, setMsg] = useState({\n    id: null,\n    msg: null,\n  });\n\n  const [openProfile, setOpenProfile] = useState(\"0\");\n\n  const handleResetPassword = async () => {\n    if (!email.length) {\n      setMsg({\n        id: \"400\",\n        msg: \"You need to fill in the email field\",\n      });\n      return;\n    }\n    try {\n      const res = await apiClient.post(\"/auth/resetPassword\", {\n        email,\n        openProfile,\n      });\n      console.log(\"res :::\", res);\n\n      setMsg({ id: res.data.messageId, msg: res.data.message });\n    } catch (err) {\n      console.log(\"err\", err);\n      console.log(\"err\", err.response);\n      const { error, code } = err.response.data;\n      setMsg({\n        id: code,\n        msg: error,\n      });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"popup\">\n        <div className=\"pop-tb pw-reset\">\n          {/* <!-- zoomIn은 팝업 띄우는 애니메이션 --> */}\n          <div className=\"pop-cell zoomIn\">\n            <div className=\"login-box\">\n              <div className=\"pw-header line2\">\n                <button type=\"button\" className=\"prev\" onClick={toggleForm}>\n                  prev\n                </button>\n                <h2 style={{ textTransform: \"lowercase\" }}>\n                  Is it your first time login\n                  <br />\n                  in Virtual Seoul?\n                </h2>\n              </div>\n              <div className=\"pop-content\">\n                <div className=\"form-inbox\">\n                  <ul>\n                    <li className=\"reset-pw\">\n                      <p className=\"txt2\">\n                        Please enter the email when you registered\n                        <br />\n                        online in UIA website.​ We will issue a temporary\n                        <br />\n                        password to your email address.​\n                      </p>\n                    </li>\n                    <li>\n                      <label>\n                        <span>mail</span>\n                        <input\n                          type=\"email\"\n                          title=\"mail\"\n                          value={email}\n                          onChange={(e) => setEmail(e.target.value)}\n                        />\n                      </label>\n                    </li>\n                    <li className=\"policy-txt\">\n                      <h4>\n                        <p>\n                          Business Card Sharing Policy <span>(Required)</span>\n                        </p>\n                      </h4>\n                      <div className=\"messge-box\">\n                        <p style={{ fontWeight: 600 }}>\n                          [Personal Information Protection Law]\n                        </p>\n                        <br />\n                        Under Article 15 para 1 of the Personal Information\n                        Protection Act, Article 17 para 1 and Article 24 para 1\n                        of the National Security Law, Seoul Tourism Organization\n                        seeks to obtain your consent regarding the collection,\n                        use and provision of personal information as follows.\n                        Seoul Tourism Organization will only use the information\n                        under the participant’s agreement. If you do not agree\n                        on this agreement, the service will be limited to\n                        provide.\n                        <br /> <br />\n                        <p style={{ fontWeight: 600 }}>\n                          [Personal Information Category]\n                        </p>\n                        <br />\n                        Name, Organization, Affiliation, Email, etc <br />{\" \"}\n                        <br />\n                        <p style={{ fontWeight: 600 }}>[Retention Period]</p>\n                        <br />\n                        In order to provide proper service for 'UIA Associations\n                        ROUND TABLE Asia-Pacific 2020' participants and exchange\n                        your information with other participants, we retain the\n                        personal information for one year and destroy it.\n                        Consent & Rights of the Visitor Pursuant to the Act on\n                        the Protection of Personal Information, you may reject\n                        the agreement for providing personal information, in\n                        which case you will not be able to exchange your\n                        information with other participatns. If you want to\n                        revise, please visit 'My Page' and revise your agreement\n                        status.\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"ipt-wrap reset\">\n                  {/* <p className=\"check\">\n                  <label className=\"checks\">\n                    <input type=\"checkbox\" />\n                    <span onClick={onStaySignin} className=\"checkbox-txt\">\n                      I agree to collect and use personal information.{\" \"}\n                    </span>\n                  </label>\n                </p> */}\n\n                  <p className=\"radios2\">\n                    <label className=\"radios2\">\n                      <input\n                        onClick={() => {\n                          setOpenProfile(\"1\");\n                        }}\n                        type=\"radio\"\n                        name=\"login-agree\"\n                        // onChange={(e)=>{\n                        //   if (e.target.checked) setOpenProfile(\"1\");\n                        // }}\n                        defaultChecked={openProfile == \"1\" ? \"checked\" : \"\"}\n                      />\n                      <span className=\"radio-txt\">\n                        I agree to collect and use personal information.\n                      </span>\n                    </label>\n                  </p>\n                  <p className=\"radios2\">\n                    <label className=\"radios2\">\n                      <input\n                        onClick={() => {\n                          setOpenProfile(\"0\");\n                        }}\n                        type=\"radio\"\n                        name=\"login-agree\"\n                        // onChange={(e)=>{\n                        //   // if (e.target.checked) setOpenProfile(\"0\");\n                        // }}\n                        defaultChecked={openProfile == \"0\" ? \"checked\" : \"\"}\n                      />\n                      <span className=\"radio-txt\">\n                        I disagree to collect and use personal information.{\" \"}\n                        <br />\n                        If you disagree, you cannot exchange your information\n                        with other attendees.\n                      </span>\n                    </label>\n                  </p>\n                </div>\n                <div className=\"policy-box\" style={{ color: \"#006ab2\" }}>\n                  * If you want to share your business card with the other party\n                  in the lounge, you must agree to the terms and conditions.\n                </div>\n\n                <div className=\"btn-login\">\n                  {msg.id && msg.id === \"MSG-0006\" ? (\n                    <div>{msg.msg}</div>\n                  ) : (\n                    <div className=\"error\">{msg.msg}</div>\n                  )}\n                  <button type=\"button\" onClick={handleResetPassword}>\n                    SEND\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nResetPassword.propTypes = {\n  toggleForm: PropTypes.func.isRequired,\n};\n\nexport default ResetPassword;\n","import React, { useState } from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport ResetPassword from \"./ResetPassword\";\n\nconst LoginModal = () => {\n  const [isLoginform, setIsLoginForm] = useState(true);\n  const toggleForm = () => {\n    setIsLoginForm((prev) => !prev);\n  };\n  return (\n    <>\n      {isLoginform ? (\n        <LoginForm toggleForm={toggleForm} />\n      ) : (\n        <ResetPassword toggleForm={toggleForm} />\n      )}\n    </>\n  );\n};\n\nLoginModal.propTypes = {};\n\nexport default LoginModal;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport define from \"../../config/define\";\nimport { AuthContext } from \"../../store/auth/AuthContext\";\nimport LoginModal from \"../common/LoginModal\";\n\nconst Intro = (props) => {\n  const { isAuthenticated, loading } = useContext(AuthContext);\n  // console.log(\"isAuthed ::\", isAuthed);\n\n  // if (isAuthed === false) return <Redirect to=\"/lobby\" />;\n\n  if (!loading && isAuthenticated) return <Redirect to=\"/lobby\" />;\n\n  return (\n    <>\n      <div className=\"wrapper login-wrap\">\n        <div className=\"content-wrap\">\n          <div className=\"canvas-wrap\">\n            <img\n              alt=\"\"\n              src={define.RESOURCE.INTRO_BACKGROUND}\n              style={{ width: \"100%\", height: \"100%\" }}\n            />\n          </div>\n        </div>\n      </div>\n      <LoginModal />\n    </>\n  );\n};\n\nIntro.propTypes = {};\n\nexport default Intro;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport define from \"../../config/define\";\nimport { LobbyContext } from \"../../store/lobby/LobbyContext\";\n// import BrandingList from \"./modal/BrandingList\";\n// import IntroVideo from \"./modal/IntroVideo\";\n// import HelpDesk from \"./modal/HelpDesk\";\n// import AgencyList from \"./modal/AgencyList\";\n// import Lounge from \"./modal/Lounge\";\n// import ProgramInfo from \"./modal/ProgramInfo\";\nimport { AuthContext } from \"../../store/auth/AuthContext\";\n\nconst LobbyPage = () => {\n  const { setModalManager } = useContext(LobbyContext);\n  const { isAuthenticated, loading } = useContext(AuthContext);\n\n  const history = useHistory();\n  const directToMainConf = () => {\n    history.push(\"/mainConference\");\n  };\n\n  const openSubconfSelect = () => {\n    setModalManager((prev) => ({\n      ...prev,\n      subConference: {\n        // 1 is open strueate\n        open: true,\n      },\n    }));\n  };\n\n  // const openIntroVideo = () => {\n  //   setModalManager((prev) => ({\n  //     ...prev,\n  //     introVideo: {\n  //       open: true,\n  //     },\n  //   }));\n  // };\n\n  const openHelpDesk = () => {\n    setModalManager((prev) => ({\n      ...prev,\n      helpDesk: {\n        open: true,\n      },\n    }));\n  };\n\n  const openProgramInfo = () => {\n    setModalManager((prev) => ({\n      ...prev,\n      programInfo: {\n        open: true,\n      },\n    }));\n  };\n\n  // const openAgencyList = () => {\n  //   setModalManager((prev) => ({\n  //     ...prev,\n  //     agencyList: {\n  //       open: true,\n  //     },\n  //   }));\n  // };\n\n  // const openNetworkLounge = () => {\n  //   setModalManager((prev) => ({\n  //     ...prev,\n  //     lounge: {\n  //       open: true,\n  //     },\n  //   }));\n  // };\n\n  // const openBrandinglist = () => {\n  //   setModalManager((prev) => ({\n  //     ...prev,\n  //     branding: {\n  //       open: true,\n  //     },\n  //   }));\n  // };\n\n  if (!loading && !isAuthenticated) return <Redirect to=\"/\" />;\n  return (\n    <>\n      <div className=\"wrapper login-wrap pos--relative\">\n        <div className=\"content-wrap\">\n          <div className=\"canvas-wrap\">\n            <img alt=\"\" src={define.RESOURCE.LOBBY_BACKGROUND} />\n            <button\n              type=\"button\"\n              className=\"opener__departmentMembers\"\n              onClick={openSubconfSelect}\n            >\n              분과 회의장 - 기능 완료\n            </button>\n            <button\n              type=\"button\"\n              className=\"opener__allMembers\"\n              onClick={directToMainConf}\n            >\n              전체 회의장 - 기능완료\n            </button>\n            <img\n              src=\"https://d2lx5o5tt1uoj2.cloudfront.net/theater/cover/3-2.Five_Senses_Experience(Modern Han).jpg\"\n              alt=\"\"\n              className=\"opener__introVideo\"\n            />\n\n            <button\n              type=\"button\"\n              className=\"opener__helpDesk\"\n              onClick={openHelpDesk}\n            >\n              헬프 데스크 - 시안 데이터 대기중\n            </button>\n            <button\n              type=\"button\"\n              className=\"opener__program\"\n              onClick={openProgramInfo}\n            >\n              program info - 시안, 데이터 대기중\n            </button>\n            {/* <button\n                type=\"button\"\n                className=\"opener__branding\"\n                onClick={openBrandinglist}\n              >\n                branding list - 시안, 데이터 대기중\n              </button> */}\n            {/* <button\n              type=\"button\"\n              className=\"opener__agancies\"\n              onClick={openAgencyList}\n            >\n              exhibition agency list - 시안, 데이터 대기중\n            </button>\n            <button\n              type=\"button\"\n              className=\"opener__lounge\"\n              onClick={openNetworkLounge}\n            >\n              network lounge\n            </button> */}\n          </div>\n        </div>\n      </div>\n      {/* <BrandingList /> */}\n      {/* <IntroVideo /> */}\n      {/* <AgencyList /> */}\n      {/* <Lounge /> */}\n\n      {/* <div style={{ position: \"relative\", left: \"350px\" }}>\n        <ul>\n          <li>\n            로그인기능(협회제공DB연동,유저의등록비납부여부에따른로그인제한) :\n            intro에서 처리.\n          </li>\n          <li>공간이동기능</li>\n          <li>프로그램 네비게이션</li>\n          <li>헬프데스크 - Text Chat</li>\n          <li>홍보영상 및 축하메시지 재생 기능</li>\n          <li>주요후원사브랜딩공간제공</li>\n          <li>==네트워크 라운지 기능==</li>\n          <li>화상채팅(참가자 간 1:1 대화 가능)</li>\n          <li>스탬프 투어 기능</li>\n          <li>설문기능</li>\n        </ul> */}\n      {/* </div> */}\n    </>\n  );\n};\n\nexport default LobbyPage;\n","import React, { useEffect, useState, createContext } from \"react\";\nimport { findLocaleInStorage } from \"../../utils/helper\";\n\nconst loadLocaleDataByAcceptHeader = (locale) => {\n  switch (locale) {\n    case \"kr\":\n      return import(\"../../compiled-lang/kr.json\");\n    default:\n      return import(\"../../compiled-lang/en.json\");\n  }\n};\n\nconst LocaleContext = createContext(null);\n\nconst LocaleProvider = ({ children }) => {\n  const [locale, setLocale] = useState({\n    locale: \"en\",\n    msgs: null,\n  });\n\n  const handleLangSubmit = async (lang) => {\n    const msgs = await loadLocaleDataByAcceptHeader(lang);\n\n    localStorage.setItem(\"locale\", lang);\n\n    setLocale({\n      locale: lang,\n      msgs,\n    });\n  };\n  // did user set lang preference explicitly?\n  // const [localeInStorage, setlocaleInStorage] = useState(findLocaleInStorage());\n\n  useEffect(() => {\n    const getLocale = async () => {\n      const localeInStorage = findLocaleInStorage();\n      console.log(\"localeInStorage ::\", localeInStorage);\n      if (!localeInStorage) {\n        // detect accept Lang Header\n        let language =\n          window.navigator.userLanguage || window.navigator.language;\n        console.log(\"language ::\", language);\n        if (language === \"ko-KR\") {\n          language = \"kr\";\n        } else {\n          language = \"en\";\n        }\n\n        const msgs = await loadLocaleDataByAcceptHeader(language);\n\n        setLocale({\n          msgs: msgs,\n          locale: language,\n        });\n      } else {\n        const msgs = await loadLocaleDataByAcceptHeader(localeInStorage);\n        setLocale({\n          msgs: msgs,\n          locale: localeInStorage,\n        });\n      }\n    };\n    getLocale();\n  }, []);\n\n  console.log(\"locale :: \", locale);\n\n  const store = {\n    locale,\n    handleLangSubmit,\n  };\n\n  return (\n    <LocaleContext.Provider value={store}>{children}</LocaleContext.Provider>\n  );\n};\n\nexport { LocaleProvider, LocaleContext };\n// npm run extract -- 'src/**/*.js*' --out-file lang/en.json --id-interpolation-pattern '[sha512:contenthash:base64:6]'\n// npm run extract -- 'src/**/*.js*' --out-file lang/kr.json --id-interpolation-pattern '[sha512:contenthash:base64:6]'\n\n// npm run compile -- lang/kr.json --ast --out-file src/compiled-lang/kr.json\n// npm run compile -- lang/en.json --ast --out-file src/compiled-lang/en.json\n","import React, { useContext } from \"react\";\n\nconst ReplayList = ({ handleClose, open, live }) => {\n  // need to call server api\n\n  if (!open) return <></>;\n  return (\n    <div className=\"popup modal on\">\n      <div className=\"pop-tb\">\n        {/* <!-- zoomIn은 팝업 띄우는 애니메이션 --> */}\n        <div className=\"pop-cell zoomIn\">\n          <div className=\"modal-box\">\n            <div className=\"modal-header\">\n              <button type=\"button\" className=\"prev\">\n                prev\n              </button>\n              <h2\n                style={{\n                  textTransform: \"none\",\n                }}\n              >\n                ReplayList\n              </h2>\n              <button type=\"button\" className=\"close\" onClick={handleClose}>\n                close\n              </button>\n            </div>\n            <div className=\"pop-content\">\n              <div className=\"content-box\">ReplayList</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReplayList;\n","import React, { useContext, useState } from \"react\";\n\nimport { AuthContext } from \"../../store/auth/AuthContext\";\n\nconst LiveStreamingModal = ({\n  play,\n  playVideo,\n  handleClose,\n  open,\n  live,\n  openEnterPopper,\n  stopVideo,\n}) => {\n  // need to call server api\n  const { user } = useContext(AuthContext);\n  const onPlay = () => {\n    console.log(\"user ::\", user);\n    if (user.role === \"3\") {\n      openEnterPopper();\n    } else {\n      playVideo();\n    }\n  };\n\n  const onClose = () => {\n    handleClose();\n    stopVideo();\n  };\n\n  if (!open) return <></>;\n  return (\n    <div className=\"popup modal on\">\n      <div className=\"pop-tb\">\n        {/* <!-- zoomIn은 팝업 띄우는 애니메이션 --> */}\n        <div className=\"pop-cell zoomIn\">\n          <div className=\"modal-box\">\n            <div className=\"modal-header\">\n              <button type=\"button\" className=\"prev\">\n                prev\n              </button>\n              <h2\n                style={{\n                  textTransform: \"none\",\n                }}\n              >\n                LiveStreamingModal\n              </h2>\n              <button type=\"button\" className=\"close\" onClick={onClose}>\n                close\n              </button>\n            </div>\n            <div className=\"pop-content\">\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  cursor: \"pointer\",\n                }}\n                className=\"content-box\"\n              >\n                {play ? (\n                  <iframe\n                    title=\"iframe\"\n                    style={{\n                      width: \"700px\",\n                      height: \"400px\",\n                    }}\n                    src=\"https://player.vimeo.com/video/456401724?autoplay=1&loop=1&title=0&byline=0&portrait=0\"\n                  />\n                ) : (\n                  <button onClick={onPlay} type=\"button\">\n                    <img\n                      src=\"https://d2lx5o5tt1uoj2.cloudfront.net/theater/cover/3-2.Five_Senses_Experience(Modern Han).jpg\"\n                      style={{\n                        width: \"700px\",\n                        height: \"400px\",\n                      }}\n                      alt=\"\"\n                    />\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LiveStreamingModal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst EnterPopper = ({ open, playVideo, stopVideo }) => {\n  const handleEnter = () => {\n    playVideo();\n    // record the time\n  };\n\n  const handleLeave = () => {\n    stopVideo();\n    // record the time\n  };\n\n  if (!open) return <></>;\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        top: \"50px\",\n        right: \"70px\",\n        background: \"#eee\",\n        width: \"300px\",\n        height: \"60px\",\n        display: \"flex\",\n        zIndex: \"100000000\",\n      }}\n    >\n      <button\n        type=\"button\"\n        onClick={handleEnter}\n        style={{\n          width: \"50%\",\n          background: \"green\",\n          color: \"black\",\n        }}\n      >\n        <p style={{ fontSize: \"30px\", textAlign: \"center\" }}>입장</p>\n      </button>\n      <button\n        type=\"button\"\n        onClick={handleLeave}\n        style={{\n          width: \"50%\",\n          fontSize: \"30px\",\n          background: \"pink\",\n          color: \"black\",\n        }}\n      >\n        <p style={{ fontSize: \"30px\", textAlign: \"center\" }}>퇴장</p>\n      </button>\n    </div>\n  );\n};\n\nEnterPopper.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport default EnterPopper;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../../store/auth/AuthContext\";\nimport define from \"../../config/define\";\nimport { apiClient } from \"../../utils/data/api\";\nimport { LocaleContext } from \"../../store/locale/LocaleContext\";\nimport ReplayList from \"./ReplayList\";\nimport LiveStreamingModal from \"./LiveStreamingModal\";\nimport EnterPopper from \"./EnterPopper\";\n\nconst mustWatchUser = {\n  access_type: \"1\",\n  email: \"si.kim+006@salin.co.kr\",\n  idx: 7,\n  is_paid_user: \"1\",\n  name: \"KIM SUNGIL006\",\n  password: \"A6xnQhbz4Vx2HuGl4lXwZ5U2I8iziLRFnhP5eNfIRvQ=\",\n  role: \"3\",\n};\n\nconst normalUser = {\n  access_type: \"1\",\n  email: \"si.kim+006@salin.co.kr\",\n  idx: 7,\n  is_paid_user: \"1\",\n  name: \"KIM SUNGIL006\",\n  password: \"A6xnQhbz4Vx2HuGl4lXwZ5U2I8iziLRFnhP5eNfIRvQ=\",\n  role: \"1\",\n};\n\nconst MainConference = () => {\n  const { isAuthenticated, loading, token } = useContext(AuthContext);\n  const {\n    locale: { locale },\n  } = useContext(LocaleContext);\n  const [live, setLive] = useState(null);\n  const [streamingOpen, setStreamingOpen] = useState(false);\n  const [replayListOpen, setReplayListOpen] = useState(false);\n  const [play, setPlay] = useState(false);\n  const [enterPopperOpen, setEnterPopperOpen] = useState(false);\n\n  const playVideo = () => {\n    setPlay(true);\n  };\n\n  const stopVideo = () => {\n    setPlay(false);\n  };\n\n  const handleToggleStreaming = () => {\n    setStreamingOpen((prev) => !prev);\n  };\n\n  const handleToggleReplay = () => {\n    setReplayListOpen((prev) => !prev);\n  };\n  const openEnterPopper = () => {\n    setEnterPopperOpen(true);\n  };\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      const fetchLiveData = async () => {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        };\n\n        try {\n          const res = await apiClient.post(\n            \"/mainConference\",\n            {\n              language_code: locale,\n            },\n            config\n          );\n          console.log(\"res ::\", res);\n          setLive(res.data[0]);\n        } catch (err) {\n          console.log(\"err ::\", err);\n        }\n      };\n      fetchLiveData();\n    }\n  }, [isAuthenticated]);\n\n  if (!loading && !isAuthenticated) return <Redirect to=\"/\" />;\n\n  return (\n    <>\n      <div style={{ position: \"relative\" }}>\n        <img\n          stlye={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n          }}\n          alt=\"\"\n          src={define.RESOURCE.MAIN_CONFERENCE_BG}\n        />\n        <LiveStreamingModal\n          handleClose={handleToggleStreaming}\n          open={streamingOpen}\n          live={live}\n          play={play}\n          stopVideo={stopVideo}\n          playVideo={playVideo}\n          openEnterPopper={openEnterPopper}\n        />\n        <ReplayList handleClose={handleToggleReplay} open={replayListOpen} />\n        <EnterPopper\n          stopVideo={stopVideo}\n          playVideo={playVideo}\n          open={enterPopperOpen}\n        />\n        <button\n          style={{\n            position: \"fixed\",\n            top: \"800px\",\n            left: \"600px\",\n            padding: \"10px\",\n            fontSize: \"20px\",\n          }}\n          type=\"button\"\n          onClick={handleToggleStreaming}\n        >\n          live streaming opener\n        </button>\n\n        <button\n          style={{\n            position: \"fixed\",\n            top: \"800px\",\n            left: \"1000px\",\n            padding: \"10px\",\n            fontSize: \"20px\",\n          }}\n          type=\"button\"\n          onClick={handleToggleReplay}\n        >\n          Replay list\n        </button>\n\n        {/* <ul>\n          <li>실시간 영상 스트리밍</li>\n          <li>텍스트채팅</li>\n          <li>평가기능</li>\n        </ul> */}\n      </div>\n    </>\n  );\n};\n\nexport default MainConference;\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst SubConferenceContext = createContext({\n  banner: {\n    left_banner: \"\",\n    right_banner: \"\",\n    setBanners: () => {},\n  },\n  session: {\n    sessionList: [],\n    replayList: [],\n    playingSession: [],\n    setSessionList: () => {},\n    setSessionReplayList: () => {},\n    setPlayingSession: () => {},\n  },\n  modal: {\n    name: \"\",\n    trigger: () => {},\n  },\n  timeStamp: {\n    start_time: 0,\n    end_time: 0,\n    setTimeStamp: () => {},\n  },\n});\n\nconst isNowBetween = ({ start, end }) => {\n  const now = Date.now();\n  return Date.now(start) < now && now < Date.now(end);\n};\n\nconst useModal = () => {\n  const [name, trigger] = useState(\"\");\n\n  return { name, trigger };\n};\n\nconst useTimeStamp = () => {\n  const [timeStamp, setTimeStamp] = useState({\n    start_time: 0,\n    end_time: 0,\n  });\n  return { timeStamp, setTimeStamp };\n};\n\nconst useBanner = () => {\n  const [banners, setBanners] = useState({\n    left_banner: \"\",\n    right_banner: \"\",\n  });\n\n  //   useEffect(() => {\n  //   fetch('', { method: 'GET'})\n  //   .then(res => setBanners(res.data))\n  //   .catch(err => console.error(err.response))\n  //   }, []);\n\n  return { banners, setBanners };\n};\n\nconst useSessionList = () => {\n  const [sessionList, setSessionList] = useState([]);\n  const [replayList, setSessionReplayList] = useState([]);\n  const [playingSession, setPlayingSession] = useState({});\n  const location = useLocation();\n\n  useEffect(() => {\n    const currentTime = Date.now();\n    const getSessionReplayList = (data) => {\n      return data.filter((session) => {\n        return Date.parse(session.close_datetime) > currentTime ? session : [];\n      });\n    };\n\n    const getSessionByIndex = (list) => {\n      const subConfIndex = location.pathname.substr(\n        location.pathname.length - 1\n      );\n      const result = list.filter((session) => {\n        session.cover_url =\n          \"https://d2lx5o5tt1uoj2.cloudfront.net/conference/cover/video12.png\";\n        session.action_url =\n          \"https://player.vimeo.com/video/276012526?autoplay=1&loop=1\";\n        return session.sub_section_idx === parseInt(subConfIndex, 10)\n          ? session\n          : null;\n      });\n      return result;\n    };\n    const getSessionList = async () => {\n      try {\n        const options = {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        };\n        const response = await axios.post(\n          \"http://localhost:7001/api/subConference\",\n          {\n            language_code: \"en\",\n          },\n          options\n        );\n        const { data } = response;\n        if (!Array.isArray(data)) return;\n        setSessionReplayList(getSessionReplayList(data));\n        setSessionList(getSessionByIndex(data));\n      } catch (error) {\n        console.error(\"sessionList Provider useCallback error :\", error);\n      }\n    };\n\n    getSessionList();\n  }, []);\n\n  useEffect(() => {}, [playingSession]);\n\n  return { sessionList, replayList, playingSession, setPlayingSession };\n};\n\n// const SubConferenceProvider = ({ children }) => {\n//   return (\n//     <ModalProvider>\n//       <SessionListProvider>\n//         <BannerProvider>\n//           <TimestampProvider>{children}</TimestampProvider>\n//         </BannerProvider>\n//       </SessionListProvider>\n//     </ModalProvider>\n//   );\n// };\n\nconst SubConferenceProvider = ({ children }) => {\n  const value = {\n    modal: useModal(),\n    timeStamp: useTimeStamp(),\n    banner: useBanner(),\n    session: useSessionList(),\n  };\n  return (\n    <SubConferenceContext.Provider value={value}>\n      {children}\n    </SubConferenceContext.Provider>\n  );\n};\nexport { SubConferenceContext, SubConferenceProvider };\n","import React, { useContext } from \"react\";\nimport { SubConferenceContext } from \"../../../store/subConference/SubConferenceContext\";\n\nconst Player = () => {\n  const { session } = useContext(SubConferenceContext);\n  const { playingSession } = session;\n  console.log(playingSession);\n  return playingSession ? (\n    <iframe\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n      }}\n      frameBorder=\"0\"\n      src={playingSession.action_url}\n      allow=\"camera; microphone; autoplay; fullscreen\"\n      allowFullScreen\n    />\n  ) : (\n    <h1>Loading</h1>\n  );\n};\n\nexport default Player;\n","import React, { useContext, useState } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { SubConferenceContext } from \"../../../store/subConference/SubConferenceContext\";\n\nconst SessionReplayList = ({ onPlay }) => {\n  const { session } = useContext(SubConferenceContext);\n  const { replayList } = session;\n  const [playingSession, setPlayingSession] = useState({\n    src: \"\",\n    subject: \"\",\n    open_datetime: \"\",\n    close_datetime: \"\",\n  });\n  return (\n    <div>\n      <div className=\"video-play\">\n        <ul className=\"video-list\" style={{ display: \"flex\" }}>\n          <li className=\"first\">\n            <div className=\"video\">\n              {!playingSession.src ? (\n                <div style={{ textAlign: \"center\", lineHeight: \"400px\" }}>\n                  <h1>Please select Video</h1>\n                </div>\n              ) : (\n                <iframe\n                  width=\"100%\"\n                  height=\"100%\"\n                  src={playingSession.src}\n                  preload=\"auto\"\n                  title=\"conference vid\"\n                  className=\"embed-responsive-item\"\n                  allow=\"camera; microphone; autoplay; fullscreen\"\n                  allowFullScreen\n                />\n              )}\n            </div>\n            <div className=\"title\">\n              <p>{playingSession.subject}</p>\n              <span>{playingSession.open_datetime}</span>\n            </div>\n          </li>\n          <li className=\"last\">\n            {replayList &&\n              replayList.map((v) => (\n                <div\n                  key={v.subject}\n                  className=\"video\"\n                  style={{\n                    display: \"flex\",\n                    padding: \"0 0 1rem 0\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => {\n                    setPlayingSession({\n                      src: v.action_url,\n                      subject: v.subject,\n                      open_datetime: v.open_datetime,\n                      close_datetime: v.close_datetime,\n                    });\n                  }}\n                >\n                  <img src={v.cover_link} alt=\"video cover link\" />\n                  <p className=\"tit\">\n                    {v.subject}\n                    <br />\n                    {/* {moment.tz(item.start_datetime, 'Asia/Seoul').format(\"YYYY-MM-DD HH:mm\") + \" KST\"} */}\n                  </p>\n                </div>\n              ))}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nSessionReplayList.propTypes = {\n  onPlay: PropTypes.func.isRequired,\n};\n\nconst SessionTimeTable = ({ onPlay }) => {\n  const { session } = useContext(SubConferenceContext);\n  const { sessionList } = session;\n  if (!sessionList.length) {\n    return (\n      <div>\n        <h1>진행 중인 세션이 없습니다.</h1>\n      </div>\n    );\n  }\n  return (\n    <div>\n      {sessionList.length &&\n        sessionList.map((v, idx) => {\n          return (\n            <div\n              key={v.subject}\n              style={{ display: \"flex\", padding: \"0 0 1rem 0\" }}\n            >\n              <div style={{ flex: 1 }}>\n                강연\n                {idx + 1}\n              </div>\n              <div\n                style={{ display: \"flex\", flexDirection: \"column\", flex: 2 }}\n              >\n                <p>{v.subject}</p>\n                <p>\n                  {/* {session.presenter}  */}\n                  {/* {session.company} */}\n                  소속 이름\n                </p>\n              </div>\n              <div data-idx={idx} style={{ flex: 1 }} onClick={onPlay}>\n                <span>play</span>\n              </div>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nSessionTimeTable.propTypes = {\n  onPlay: PropTypes.func.isRequired,\n};\n\nconst SessionList = () => {\n  const { modal, session } = useContext(SubConferenceContext);\n  const { name, trigger } = modal;\n  const { sessionList, setPlayingSession } = session;\n\n  const onPlay = (e) => {\n    const { dataset } = e.currentTarget;\n    const { idx } = dataset;\n    if (!idx) return null;\n    setPlayingSession(sessionList[idx]);\n    trigger(\"player\");\n    return \"\";\n  };\n\n  return (\n    <div>\n      {name === \"replayList\" ? (\n        <SessionReplayList onPlay={onPlay} />\n      ) : (\n        <SessionTimeTable onPlay={onPlay} />\n      )}\n    </div>\n  );\n};\nexport default SessionList;\n","import React, { Fragment, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { SubConferenceContext } from \"../../../store/subConference/SubConferenceContext\";\nimport Player from \"./Player\";\nimport SessionList from \"./SessionList\";\n\nconst Container = () => {\n  const history = useHistory();\n  const { modal } = useContext(SubConferenceContext);\n  const { name, trigger } = modal;\n  const Components = {\n    player: Player,\n    sessionList: SessionList,\n    replayList: SessionList,\n  };\n  const Content = Components[name] || Fragment;\n  const closeModal = () => {\n    trigger(\"\");\n  };\n  const getToLobby = () => {\n    trigger(\"\");\n    history.push(\"/lobby\");\n  };\n\n  return (\n    <div className=\"popup modal on\">\n      <div className=\"pop-tb\">\n        <div className=\"pop-cell zoomIn\">\n          <div className=\"modal-box\">\n            <div className=\"modal-header\">\n              <h2\n                style={{\n                  textTransform: \"none\",\n                }}\n              >\n                {/* todo 분과 제목 */}\n              </h2>\n              <button\n                className=\"close\"\n                onClick={name === \"replayList\" ? getToLobby : closeModal}\n              >\n                close\n              </button>\n            </div>\n            <div className=\"pop-content\">\n              <div className=\"content-box\" style={{ height: \"100%\" }}>\n                <div style={{ height: \"inherit\", margin: \"0 2rem\" }}>\n                  {name && <Content />}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Container;\n","import React, { useState, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  SubConferenceProvider,\n  SubConferenceContext,\n} from \"../../store/subConference/SubConferenceContext\";\nimport { AuthContext } from \"../../store/auth/AuthContext\";\nimport ModalContainer from \"./Modal/Container\";\nimport define from \"../../config/define\";\nimport \"./SubConference.css\";\n\nconst SubConferenceContainer = () => {\n  const { isAuthenticated, loading } = useContext(AuthContext);\n  if (!loading && !isAuthenticated) return <Redirect to=\"/lobby\" />;\n  return (\n    <SubConferenceProvider>\n      <SubConference />\n    </SubConferenceProvider>\n  );\n};\n\nconst SubConference = () => {\n  const { modal, banner, session, timeStamp } = useContext(\n    SubConferenceContext\n  );\n  const { name, trigger } = modal;\n  const { left_banner, right_banner } = banner;\n  const { playingSession } = session;\n  const { setTimeStamp } = timeStamp;\n  const [notice, setNotice] = useState(true);\n\n  const onTimeStampClick = (e) => {\n    e.persist();\n    const { id } = e.currentTarget;\n    if (!id) return null;\n    setTimeStamp((prev) => {\n      return { ...prev, [`${e.target.id}_time`]: Date.now() };\n    });\n    return \"\";\n  };\n\n  const onNoticePopup = () => {\n    setNotice((notice) => !notice);\n  };\n\n  return (\n    <>\n      <div\n        style={{ position: \"relative\", height: \"100%\", marginLeft: \"32rem\" }}\n      >\n        <img\n          className=\"sub_conference_background\"\n          alt=\"분과 회의장\"\n          src={define.RESOURCE.MAIN_CONFERENCE_BG}\n        />\n        <div className=\"sub_conference\">\n          {notice && (\n            <div className=\"notice\">\n              연수평점 신청자는 반드시 각 세션별로 시작, 종료 시 마다 [입장] &\n              [퇴장] 버튼을 클릭하여 출결기록을 남겨주시기 바랍니다 .\n              <br />\n              ※ 뒤로가기 또는 브라우저 종료 시 퇴장 기록되지 않음.​\n              <br />※ 기록이 없는 경우 평점 인정 불가\n              <div style={{ textAlign: \"right\", margin: \"0 2rem\" }}>\n                <span onClick={onNoticePopup}>X</span>\n              </div>\n            </div>\n          )}\n          <div className=\"timestamp_btn\">\n            <button id=\"start\" onClick={onTimeStampClick}>\n              입장\n            </button>\n            <button id=\"end\" onClick={onTimeStampClick}>\n              퇴장\n            </button>\n          </div>\n          <div\n            style={{\n              position: \"relative\",\n              display: \"flex\",\n              height: \"100%\",\n            }}\n          >\n            <div\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                position: \"relative\",\n                minWidth: \"100%\",\n                display: \"flex\",\n              }}\n            >\n              <div\n                id=\"play\"\n                className=\"video_cover\"\n                onClick={() => trigger(\"sessionList\")}\n              >\n                <img\n                  style={{ width: \"100%\", height: \"100%\" }}\n                  src={playingSession.cover_url}\n                  alt=\"분과 영상 썸네일\"\n                />\n              </div>\n              <div className=\"banner left\">\n                <img src={left_banner} alt=\"배너\" />\n              </div>\n              <div className=\"banner right\">\n                <img src={right_banner} alt=\"배너\" />\n              </div>\n            </div>\n          </div>\n\n          <button id=\"replay_btn\" onClick={() => trigger(\"replayList\")}>\n            다시보기\n          </button>\n          {name && <ModalContainer />}\n        </div>\n      </div>\n    </>\n  );\n};\n\n// 텍스트채팅 - how ?\n// 평가기능 - 설문지? 별점주기?\n\nexport default SubConferenceContainer;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Box, Grid, Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { LobbyContext } from \"../../../store/lobby/LobbyContext\";\nimport { AuthContext } from \"../../../store/auth/AuthContext\";\nimport { apiClient } from \"../../../utils/data/api\";\n\nconst SubConferenceList = () => {\n  // need to call server api\n  const {\n    modalManager: { subConference },\n    setModalManager,\n  } = useContext(LobbyContext);\n  const history = useHistory();\n  const { open } = subConference;\n  const { token } = useContext(AuthContext);\n  const [subConferenceList, setSubConferenceList] = useState(null);\n\n  const handleClose = () => {\n    setModalManager((prev) => ({\n      ...prev,\n      subConference: {\n        open: false,\n      },\n    }));\n  };\n\n  const handleDirect = (param) => {\n    if (!param) throw Error(\"bad param type\");\n    console.log(`/subConference/${param}`);\n    history.push(`/subConference/${param}`);\n    handleClose();\n  };\n\n  useEffect(() => {\n    if (open !== true) return;\n\n    console.log(\"subcon list call.\");\n    // window.alert('aa');\n    const fetchSubConferenceData = async () => {\n      try {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        };\n        const res = await apiClient.get(\"/section?section_type=sub\", config);\n        console.log(\"res\", res);\n        setSubConferenceList(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchSubConferenceData();\n  }, [open]);\n\n  if (!open) return <></>;\n  return (\n    <div className=\"popup modal on\">\n      <div className=\"pop-tb\">\n        {/* <!-- zoomIn은 팝업 띄우는 애니메이션 --> */}\n        <div className=\"pop-cell zoomIn\">\n          <div className=\"modal-box\">\n            <div className=\"modal-header\">\n              {/* <button type=\"button\" className=\"prev\">\n                prev\n              </button> */}\n              <h2\n                style={{\n                  textTransform: \"none\",\n                }}\n              >\n                분과회의장 목록\n              </h2>\n              <button type=\"button\" className=\"close\" onClick={handleClose}>\n                close\n              </button>\n            </div>\n            <div className=\"pop-content\">\n              {/* <div className=\"content-box\">분과회의장 목록</div> */}\n              {subConferenceList &&\n                subConferenceList.map((subConference) => (\n                  \n                  <Box py={2} mx={4} my={3} bgcolor=\"#eee\" key={subConference.idx}>\n                    <Grid alignItems=\"center\" justify=\"center\" container>\n                      <Button\n                        onClick={() => {\n                          handleDirect(subConference.idx);\n                        }}\n                        size=\"large\"\n                      >\n                        {subConference.subject}\n                      </Button>\n                    </Grid>\n                  </Box>\n                ))}\n              {/* \n              <Box py={2} mx={4} my={3} bgcolor=\"#eee\">\n                <Grid alignItems=\"center\" justify=\"center\" container>\n                  <Button\n                    onClick={() => {\n                      handleDirect(2);\n                    }}\n                    size=\"large\"\n                  >\n                    Sub Conference 2\n                  </Button>\n                </Grid>\n              </Box>\n              <Box py={2} mx={4} my={3} bgcolor=\"#eee\">\n                <Grid alignItems=\"center\" justify=\"center\" container>\n                  <Button\n                    onClick={() => {\n                      handleDirect(3);\n                    }}\n                    size=\"large\"\n                  >\n                    Sub Conference 3\n                  </Button>\n                </Grid>\n              </Box> */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SubConferenceList;\n","import React, { useState, useContext } from \"react\";\nimport { Box, Button, Typography, Grid } from \"@material-ui/core\";\nimport { apiClient } from \"../../utils/data/api\";\n\nconst PassWord = () => {\n  const [password, setPassword] = useState({\n    currPassWord: \"\",\n    newPassWord: \"\",\n    confirmNewPassWord: \"\",\n  });\n  const { currPassWord, newPassWord, confirmNewPassWord } = password;\n  const [message, setErrInfo] = useState(\"\");\n\n  const validate = async () => {\n    // const { currPassWord, newPassWord, confirmNewPassWord } = password;\n    // 현재 비밀번호 확인\n    if (!currPassWord) {\n      setErrInfo(\"비밀번호를 입력해주세요\");\n      return false;\n    }\n\n    if (!currPassWord || !newPassWord || !confirmNewPassWord) {\n      setErrInfo(\"빈 칸을 확인해주세요\");\n      return false;\n    }\n\n    if (newPassWord !== confirmNewPassWord) {\n      setErrInfo(\"새 비밀번호가 일치하지 않습니다\");\n      return false;\n    }\n\n    if (currPassWord === newPassWord) {\n      setErrInfo(\"새 비밀번호가 기존 비밀번호와 동일합니다\");\n    }\n\n    return true;\n    // todo 비밀번호 조회 api\n    // const options = {\n    // headers: {\n    //   Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    // },\n    //   };\n    // const res = await apiClient.post('api/auth/resetPassword', data, options)\n    //  if(res.data){\n    //     setErrInfo({ message: \"\" });\n    // return true;\n    // }\n    // return res;\n    // })\n  };\n\n  const onNewPassWordSubmit = async () => {\n    const result = await validate();\n    if (result) {\n      alert(\"비밀번호 변경이 완료되었습니다.\");\n    }\n  };\n\n  const onKeyUp = (e) => {\n    const { id, value } = e.target;\n    if (value) setErrInfo(() => \"\");\n    setPassword((prevState) => ({\n      ...prevState,\n      [id]: value,\n    }));\n  };\n\n  return (\n    <Box p={4}>\n      <Typography variant=\"h3\" gutterBottom>\n        비밀번호 변경\n      </Typography>\n      <div>\n        <div style={{ display: \"flex\" }}>\n          <div style={{ paddingRight: \"1rem\" }}>현재 비밀번호</div>\n          <div>\n            <input\n              id=\"currPassWord\"\n              type=\"password\"\n              placeholder=\"현재 비밀번호\"\n              onKeyUp={onKeyUp}\n            />\n          </div>\n        </div>\n        <div style={{ display: \"flex\" }}>\n          <div style={{ paddingRight: \"1rem\" }}>새 비밀번호</div>\n          <div>\n            <input\n              id=\"newPassWord\"\n              type=\"password\"\n              placeholder=\"새 비밀번호\"\n              onKeyUp={onKeyUp}\n            />\n          </div>\n        </div>\n        <div style={{ display: \"flex\" }}>\n          <div style={{ paddingRight: \"1rem\" }}>새 비밀번호 확인</div>\n          <div>\n            <input\n              id=\"confirmNewPassWord\"\n              type=\"password\"\n              placeholder=\"새 비밀번호 확인\"\n              onKeyUp={onKeyUp}\n            />\n          </div>\n        </div>\n      </div>\n      <Grid container justify=\"center\">\n        <Box m={3} p={3}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!currPassWord || !newPassWord || !confirmNewPassWord}\n            onClick={onNewPassWordSubmit}\n          >\n            비밀번호 변경\n          </Button>\n        </Box>\n      </Grid>\n      <Grid>\n        <p style={{ textAlign: \"center\" }}>{message}</p>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default PassWord;\n","import React, { useContext, useEffect } from \"react\";\nimport { AuthContext } from \"../../store/auth/AuthContext\";\nimport { apiClient } from \"../../utils/data/api\";\n\nconst InformationAgreement = () => {\n  const { user, setUser } = useContext(AuthContext);\n  const { is_agreed_policy } = user;\n\n  const send = async () => {\n    try {\n      if (is_agreed_policy === null) return alert(\"동의 여부를 체크해주세요\");\n      const data = {\n        is_agreed_policy,\n      };\n      const headers = {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      };\n\n      const result = await apiClient.post(\n        \"/user/updateIsAgreedPolicy\",\n        data,\n        headers\n      );\n      const { status, data: obj } = result;\n      if (status === 200) alert(obj.message);\n      return \"\";\n    } catch (error) {\n      console.error(\"update agreement policy error : \", error);\n    }\n    return \"\";\n  };\n\n  const setIsAgreedPolicy = (bool) => {\n    setUser((prev) => {\n      return {\n        ...prev,\n        is_agreed_policy: bool,\n      };\n    });\n  };\n\n  useEffect(() => {\n    setIsAgreedPolicy(is_agreed_policy);\n  }, []);\n\n  return (\n    <div className=\"inputAgreement\">\n      <h3>개인정보 수집 및 이용 동의서</h3>\n      <br />\n      <div>\n        <div style={{ width: \"60rem\", height: \"18rem\", overflowY: \"scroll\" }}>\n          개인정보수집 및 이용 동의서​ <br />\n          <br />\n          대한병원협회(이하 협회)는 2020 KHC 사전등록 참가자(이하 참가자)의\n          소중한 개인정보를 보호하기 위하여 “개인정보보호법” 등 개인정보에 관한\n          제반 법령을 준수하고 있습니다.\n          <br />\n          ​ 협회는 “개인정보처리방침＂을 제정하여 참가자가 제공하는 개인정보가\n          어떠한 용도와 방식으로 이용되고 있으며, 개인정보보호를 위해 어떠한\n          조치가 취해지고 있는지 알려드립니다.​\n          <br />\n          <br /> ​ 1. 개인정보 수집 · 이용에 대한 동의\n          <br />\n          <br />\n          ​ 1)수집 방법​\n          <br />\n          <br /> 2020 KHC 공식 홈페이지 사전등록​\n          <br /> 2020 KHC 온라인 플랫폼 내 로그인 페이지 및 마이페이지​ ​\n          <br />\n          <br />\n          2)수집하는 개인정보의 이용 목적​\n          <br />\n          <br />\n          2020 KHC 사전등록 접수 및 참석여부 확인, 2020 KHC 정보 안내, 네트워킹\n          라운지 내 정보 공개, 문의 응대\n          <br />\n          <br />\n          ​ ​3)수집 항목\n          <br />\n          <br />\n          ​ 필수 : 개인 정보(이름, 소속, 이메일, 휴대폰 번호 등)​ 번호 등)​\n          ※인터넷 서비스 이용과정에서 아래 개인정보 항목이 자동으로 생성되어\n          수집될 수 있습니다. (IP 주소, 쿠키, MAC 주소, 서비스 이용 기록, 방문\n          기록 등)​\n          <br />\n          <br />\n          <br />\n          ​ 4)보유 및 이용기간​\n          <br />\n          <br /> ①협회는 정보주체에게 동의 받은 개인정보 보유기간이 경과하거나\n          개인정보의 처리 목적이 달성된 경우 지체 없이 개인정보를 복구·재생할 수\n          없도록 파기합니다. 다만, 다른 법률에 따라 개인정보를 보존하여야 하는\n          경우에는 해당 기간 동안 개인정보를 보존합니다.\n          <br />\n          ​ ②처리목적에 따른 개인정보의 보유기간은 다음과 같습니다.​\n          <br />\n          <br />\n          -신청자 정보: 행사 종료 후 3개월 이내 파기\n          <br />\n          <br /> ※ 관계 법령​\n          <br /> 이용자의 인터넷 로그 등 로그 기록 / 이용자의 접속자 추적 자료 :\n          3개월 (통신비밀보호법)​\n          <br />\n          <br />​ 5)수집 거부의 권리​ : 귀하는 개인정보 수집·이용에 동의하지\n          않으실 수 있습니다. 다만, 동의 거부 시 온라인 플랫폼 중 네트워킹\n          라운지 서비스 이용이 제한됩니다.\n        </div>\n        <div className=\"form\">\n          <div className=\"agreement__input\" style={{ display: \"flex\" }}>\n            <label htmlFor=\"agree\">\n              <input\n                style={{\n                  marginRight: \".4rem\",\n                  padding: \".5rem\",\n                  border: \"1px solid black\",\n                }}\n                id=\"agree\"\n                name=\"policy\"\n                type=\"checkbox\"\n                checked={is_agreed_policy === \"Y\"}\n                onChange={() => {\n                  setIsAgreedPolicy(true);\n                }}\n              />\n              동의합니다\n            </label>\n          </div>\n          <div style={{ display: \"flex\" }}>\n            <label htmlFor=\"disagree\">\n              <input\n                style={{\n                  marginRight: \".4rem\",\n                  padding: \".5rem\",\n                  border: \"1px solid black\",\n                }}\n                id=\"disagree\"\n                name=\"policy\"\n                type=\"checkbox\"\n                checked={is_agreed_policy === \"N\"}\n                onChange={() => setIsAgreedPolicy(false)}\n              />\n              동의하지 않습니다(동의하지 않을 경우 네트워킹 라운지 서비스 이용이\n              제한됩니다)\n            </label>\n          </div>\n        </div>\n        <div>\n          <button id=\"send_btn\" onClick={send}>\n            저장\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InformationAgreement;\n","import React, { useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Button, Typography, Grid } from \"@material-ui/core\";\nimport { LocaleContext } from \"../../store/locale/LocaleContext\";\nimport { AuthContext } from \"../../store/auth/AuthContext\";\nimport PassWord from \"./Password\";\nimport InformationAgreement from \"./InformationAgreement\";\n\nconst langList = [\n  {\n    label: \"Korean\",\n    labelKr: \"한국어\",\n    value: \"kr\",\n  },\n  {\n    label: \"English (USA)\",\n    labelKr: \"영어\",\n    value: \"en\",\n  },\n];\n\nconst ProfilePage = () => {\n  console.log(\"MainConference rerendered\");\n\n  const {\n    handleLangSubmit,\n    locale: { msgs, locale },\n  } = useContext(LocaleContext);\n\n  const { user } = useContext(AuthContext);\n  const { email, name, affiliation } = user;\n  const [select, setSelect] = useState(null);\n\n  const handleSelectChange = (e) => {\n    setSelect(e.target.value);\n  };\n\n  const onSubmit = () => {\n    if (!select) throw Error(\"no value in select fields \");\n    handleLangSubmit(select);\n  };\n\n  return (\n    <div style={{ marginLeft: \"32rem\" }}>\n      <Box p={5}>\n        <Grid container justify=\"center\">\n          <Typography variant=\"h2\" gutterBottom>\n            Profile page\n          </Typography>\n        </Grid>\n\n        <Grid container direction=\"column\" justify=\"flex-start\">\n          <Box p={4}>\n            <Typography variant=\"h3\" gutterBottom>\n              내 정보\n            </Typography>\n            <div>\n              <div style={{ display: \"flex\" }}>\n                <div>ID</div>\n                <div>{email}</div>\n              </div>\n              <div style={{ display: \"flex\" }}>\n                <div>소속</div>\n                <div>{affiliation}</div>\n              </div>\n              <div style={{ display: \"flex\" }}>\n                <div>이름</div>\n                <div>{name}</div>\n              </div>\n            </div>\n          </Box>\n        </Grid>\n        <Grid>\n          <PassWord />\n        </Grid>\n        <Grid>\n          <InformationAgreement />\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nProfilePage.propTypes = {};\n\nexport default ProfilePage;\n","import React, { useContext } from \"react\";\nimport { LobbyContext } from \"../../../store/lobby/LobbyContext\";\n\nconst ProgramInfo = () => {\n  // need to call server api\n  const {\n    modalManager: { programInfo },\n    setModalManager,\n  } = useContext(LobbyContext);\n  const { open } = programInfo;\n\n  const handleClose = () => {\n    setModalManager((prev) => ({\n      ...prev,\n      programInfo: {\n        open: false,\n      },\n    }));\n  };\n\n  if (!open) return <></>;\n  return (\n    <div className=\"popup modal on\">\n      <div className=\"pop-tb\">\n        {/* <!-- zoomIn은 팝업 띄우는 애니메이션 --> */}\n        <div className=\"pop-cell zoomIn\">\n          <div className=\"modal-box\">\n            <div className=\"modal-header\">\n              <button type=\"button\" className=\"prev\">\n                prev\n              </button>\n              <h2\n                style={{\n                  textTransform: \"none\",\n                }}\n              >\n                ProgramInfo\n              </h2>\n              <button type=\"button\" className=\"close\" onClick={handleClose}>\n                close\n              </button>\n            </div>\n            <div className=\"pop-content\">\n              <div className=\"content-box\">ProgramInfo</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgramInfo;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { Typography } from \"@material-ui/core\";\nimport { LobbyContext } from \"../../../store/lobby/LobbyContext\";\n\nconst isOpentime = (helpData) => {\n  if (!helpData) return;\n  const { open_datetime, close_datetime } = helpData;\n\n  const isTrue = moment.utc().isBetween(open_datetime, close_datetime);\n  return isTrue;\n};\n\nconst OpenTime = () => {\n  return (\n    <div className=\"content-box\">\n      <Typography variant=\"h2\">오픈 시간입니다.</Typography>\n    </div>\n  );\n};\n\nconst ClosingTime = () => {\n  return (\n    <div className=\"content-box\">\n      <Typography variant=\"h2\">오픈 시간이 아닙니다.</Typography>\n    </div>\n  );\n};\n\nconst HelpDesk = () => {\n  const {\n    lobbyDatas: { helpData },\n  } = useContext(LobbyContext);\n  // need to call server api\n  const {\n    modalManager: { helpDesk },\n    setModalManager,\n  } = useContext(LobbyContext);\n  const { open } = helpDesk;\n  console.log(\"helpData:: \", helpData);\n\n  const handleClose = () => {\n    setModalManager((prev) => ({\n      ...prev,\n      helpDesk: {\n        open: false,\n      },\n    }));\n  };\n\n  if (!open) return <></>;\n\n  return (\n    <div className=\"popup modal on\">\n      <div className=\"pop-tb\">\n        {/* <!-- zoomIn은 팝업 띄우는 애니메이션 --> */}\n        <div className=\"pop-cell zoomIn\">\n          <div className=\"modal-box\">\n            <div className=\"modal-header\">\n              <button type=\"button\" className=\"prev\">\n                prev\n              </button>\n              <h2\n                style={{\n                  textTransform: \"none\",\n                }}\n              >\n                헬프 데스크 목록\n              </h2>\n              <button type=\"button\" className=\"close\" onClick={handleClose}>\n                close\n              </button>\n            </div>\n            <div className=\"pop-content\">\n              {isOpentime(helpData) ? (\n                <OpenTime helpData={helpData} />\n              ) : (\n                <ClosingTime helpData={helpData} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHelpDesk.propTypes = {\n  data: PropTypes.shape({}),\n};\n\nHelpDesk.defaultProps = {\n  data: null,\n};\n\nexport default HelpDesk;\n","import React, { useContext } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { IntlProvider } from \"react-intl\";\nimport { AuthProvider } from \"../store/auth/AuthContext\";\nimport Navbar from \"./common/Navbar\";\nimport Intro from \"./intro/Intro\";\nimport LobbyPage from \"./lobby/LobbyPage\";\nimport MainConference from \"./main-conference/MainConference\";\nimport SubConference from \"./sub-conference/SubConference\";\n// import Showroom from \"./showroom/Showroom\";\n// import Booth from \"./booth/Booth\";\nimport { LobbyProvider } from \"../store/lobby/LobbyContext\";\nimport { LocaleContext } from \"../store/locale/LocaleContext\";\nimport SubConferenceList from \"./lobby/modal/SubConferenceList\";\nimport ProfilePage from \"./profile/ProfilePage\";\nimport ProgramInfo from \"./lobby/modal/ProgramInfo\";\nimport HelpDesk from \"./lobby/modal/HelpDesk\";\n\n// this is the explaination of context api's pitfull\n// because even though the authenticated value didn't change, this, Test, component gets rerendered everytime one of state changes in auth context\n// we can demonstrate this by switch around between forms  in login modal\n// So, it is good to avoid using context api when using local storage is reasonable\n// rather than putting every states in Context\n// const Test = () => {\n// const { authenticated } = useContext(AuthContext);\n//   return <div>dsasdasd</div>;\n// };\n\nconst App = () => {\n  const {\n    locale: { msgs, locale },\n  } = useContext(LocaleContext);\n\n  return (\n    <IntlProvider messages={msgs} locale={locale} defaultLocale=\"en\">\n      <AuthProvider>\n        <LobbyProvider>\n          <SubConferenceList />\n          <HelpDesk />\n          <ProgramInfo />\n          {/* <Test /> */}\n\n          <Navbar />\n          <Switch>\n            <Route component={Intro} exact path=\"/\" />\n            <Route path=\"/lobby\" component={LobbyPage} />\n\n            <Route path=\"/mainConference\" component={MainConference} />\n            <Route path=\"/subConference/:id\" component={SubConference} />\n            <Route path=\"/profile\" component={ProfilePage} />\n            {/* <Route path=\"/showroom\" component={Showroom} /> \n             <Route path=\"/booth\" component={Booth} /> */}\n            <Redirect to=\"/\" />\n          </Switch>\n        </LobbyProvider>\n      </AuthProvider>\n    </IntlProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { LocaleProvider } from \"./store/locale/LocaleContext\";\n\n// // Translated messages in French with matching IDs to what you declared\n// const messagesInFrench = {\n//   myMessage: \"Ard'hui, c'est le {ts, date, ::yyyyMMdd}\",\n// };\n\n// // This is optional but highly recommended\n// // since it prevents memory leak\n// const cache = createIntlCache();\n\n// // Create the `intl` object\n// const intl = createIntl(\n//   {\n//     // Locale of the application\n//     locale: \"fr\",\n//     // Locale of the fallback defaultMessage\n//     defaultLocale: \"en\",\n//     messages: messagesInFrench,\n//   },\n//   cache\n// );\n\n// // Aujourd'hui, c'est le 23/07/2020\n// // console.log(\n// //   intl.formatMessage(\n// //     {\n// //       // Matching ID as above\n// //       id: \"myMessage\",\n// //       // Default Message in English\n// //       defaultMessage: \"Today is {ts, date, ::yyyyMMdd}\",\n// //     },\n// //     { ts: Date.now() }\n// //   )\n// // );\n\n// // 19,00 €\n// // console.log(intl.formatNumber(19, { style: \"currency\", currency: \"EUR\" }));\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <LocaleProvider>\n        <App />\n      </LocaleProvider>\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}